class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class SinglyLinkedList:
    def __init__(self):
        self.head = None

    def addAtFirst(self, data):
        new_node = Node(data)
        new_node.next = self.head
        self.head = new_node

    def addAtEnd(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
        else:
            n = self.head
            while n.next is not None:
                n = n.next
            n.next = new_node

    def removeAtFirst(self):
        if self.head is None:
            print("Linked list is empty, can't remove any element.")
        else:
            self.head = self.head.next

    def removeAtLast(self):
        if self.head is None:
            print("Linked list is empty, can't remove any element.")
        elif self.head.next is None:
            self.head = None
        else:
            n = self.head
            while n.next.next is not None:
                n = n.next
            n.next = None

    def searchNode(self, x):
        if self.head is None:
            print("Linked list is empty.")
        else:
            n = self.head
            found = False
            while n is not None and not found:
                if n.data == x:
                    found = True
                else:
                    n = n.next
            if found:
                print("! ! ! Item is present in Linked list")
            else:
                print("! ! ! Item is not present in Linked list")

    def Display(self):
        if self.head is None:
            print("Linked list is empty.")
        else:
            n = self.head
            while n is not None:
                print(n.data, "-->", end="")
                n = n.next
            

# Main program
sll = SinglyLinkedList()
while True:
    print("\nSelect operations to perform on linked list:")
    print("1. Add at beginning")
    print("2. Add at end")
    print("3. Remove from beginning")
    print("4. Remove from end")
    print("5. Search")
    print("6. Display")
    print("7. Exit")
    choice = int(input("Enter Operation No.: "))

    if choice == 1:
        ele = int(input("Enter element to add at beginning: "))
        sll.addAtFirst(ele)
    elif choice == 2:
        ele = int(input("Enter element to add at end: "))
        sll.addAtEnd(ele)
    elif choice == 3:
        sll.removeAtFirst()
    elif choice == 4:
        sll.removeAtLast()
    elif choice == 5:
        element = int(input("Enter element to search: "))
        sll.searchNode(element)
    elif choice == 6:
        sll.Display()
    elif choice == 7:
        break
    else:
        print("Enter a valid operation.")
